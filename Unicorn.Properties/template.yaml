AWSTemplateFormatVersion: 2010-09-09
Transform:
  - 'AWS::LanguageExtensions'
  - 'AWS::Serverless-2016-10-31'
Description: >
  Unicorn Properties Service. Validate the content, images and contract of
  property listings.
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - ES4000
        - ES6000
        - E0001
        - WS2001
        - ES1001
        - W3002
Parameters:
  Stage:
    Type: String
    Default: local
    AllowedValues:
      - local
      - dev
      - prod
Mappings:
  LogsRetentionPeriodMap:
    local:
      Days: 3
    dev:
      Days: 3
    prod:
      Days: 14
  Constants:
    ProjectName:
      Value: AWS Serverless Developer Experience
Conditions:
  IsProd: !Equals
    - !Ref Stage
    - Prod
Globals:
  Function:
    Runtime: python3.11
    MemorySize: 128
    Timeout: 15
    Architectures:
      - x86_64
    Environment:
      Variables:
        CONTRACT_STATUS_TABLE: !Ref ContractStatusTable
        EVENT_BUS: !Ref UnicornPropertiesEventBus
        SERVICE_NAMESPACE: '{{resolve:ssm:/uni-prop/UnicornPropertiesNamespace}}'
        LOG_LEVEL: INFO
    Tags:
      stage: !Ref Stage
      project: !FindInMap
        - Constants
        - ProjectName
        - Value
      namespace: '{{resolve:ssm:/uni-prop/UnicornPropertiesNamespace}}'
Resources:
  UnicornPropertiesEventBusNameParam:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Type: String
      Name: !Sub '/uni-prop/${Stage}/UnicornPropertiesEventBusSandesh'
      Value: !GetAtt UnicornPropertiesEventBus.Name
  UnicornPropertiesEventBusArnParam:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Type: String
      Name: !Sub '/uni-prop/${Stage}/UnicornPropertiesEventBusArnSandesh'
      Value: !GetAtt UnicornPropertiesEventBus.Arn
  ContractStatusChangedHandlerFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Tracing: Active
      CodeUri: src/
      Handler: properties_service.contract_status_changed_event_handler.lambda_handler
      Policies:
        DynamoDBReadPolicy:
          TableName: !Ref ContractStatusTable
      Events:
        StatusChangedEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: UnicornContractsBus-dev-Sandesh
            Pattern:
              source:
                # - uni-prop-prod-shared-dev-Sandesh
                - !Sub "{{resolve:ssm:/uni-prop/UnicornContractsNamespace}}-dev-Sandesh"
              detail-type:
                - ContractStatusChanged
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt PropertiesServiceDLQ.Arn
  ContractStatusChangedHandlerFunctionLogGroup:
    Type: 'AWS::Logs::LogGroup'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ContractStatusChangedHandlerFunction}'
      RetentionInDays: !FindInMap
        - LogsRetentionPeriodMap
        - !Ref Stage
        - Days
  PropertiesApprovalSyncFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Tracing: Active
      CodeUri: src/
      Handler: properties_service.properties_approval_sync_function.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ContractStatusTable
        - DynamoDBStreamReadPolicy:
            TableName: !Ref ContractStatusTable
            StreamName: !Select
              - 3
              - !Split
                - /
                - !GetAtt ContractStatusTable.StreamArn
        - SQSSendMessagePolicy:
            QueueName: !GetAtt PropertiesServiceDLQ.QueueName
        - Statement:
            - Effect: Allow
              Action:
                - 'states:SendTaskSuccess'
              Resource:
                - !Ref ApprovalStateMachine
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt ContractStatusTable.StreamArn
            BatchSize: 100
            StartingPosition: TRIM_HORIZON
            MaximumRetryAttempts: 3
            DestinationConfig:
              OnFailure:
                Destination: !GetAtt PropertiesServiceDLQ.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt PropertiesServiceDLQ.Arn
  PropertiesApprovalSyncFunctionLogGroup:
    Type: 'AWS::Logs::LogGroup'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub '/aws/lambda/${PropertiesApprovalSyncFunction}'
      RetentionInDays: !FindInMap
        - LogsRetentionPeriodMap
        - !Ref Stage
        - Days
  ContractExistsCheckerFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Tracing: Active
      CodeUri: src/
      Handler: properties_service.contract_exists_checker_function.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ContractStatusTable
  ContractExistsCheckerFunctionLogGroup:
    Type: 'AWS::Logs::LogGroup'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ContractExistsCheckerFunction}'
      RetentionInDays: !FindInMap
        - LogsRetentionPeriodMap
        - !Ref Stage
        - Days
  ContentIntegrityValidatorFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Tracing: Active
      CodeUri: src/
      Handler: properties_service.content_integrity_validator_function.lambda_handler
  ContentIntegrityValidatorFunctionLogGroup:
    Type: 'AWS::Logs::LogGroup'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ContentIntegrityValidatorFunction}'
      RetentionInDays: !FindInMap
        - LogsRetentionPeriodMap
        - !Ref Stage
        - Days
  WaitForContractApprovalFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Tracing: Active
      CodeUri: src/
      Handler: properties_service.wait_for_contract_approval_function.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ContractStatusTable
  WaitForContractApprovalFunctionLogGroup:
    Type: 'AWS::Logs::LogGroup'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub '/aws/lambda/${WaitForContractApprovalFunction}'
      RetentionInDays: !FindInMap
        - LogsRetentionPeriodMap
        - !Ref Stage
        - Days
  ApprovalStateMachine:
    Type: 'AWS::Serverless::StateMachine'
    Properties:
      Tracing:
        Enabled: true
      Name: !Sub '${AWS::StackName}-ApprovalStateMachine'
      DefinitionUri: state_machine/property_approval.asl.yaml
      Policies:
        - AWSXRayDaemonWriteAccess
        - ComprehendBasicAccessPolicy: {}
        - RekognitionDetectOnlyPolicy: {}
        - LambdaInvokePolicy:
            FunctionName: !Ref WaitForContractApprovalFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ContentIntegrityValidatorFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ContractExistsCheckerFunction
        - EventBridgePutEventsPolicy:
            EventBusName: !GetAtt UnicornPropertiesEventBus.Name
        - Statement:
            - Effect: Allow
              Action:
                - 'logs:CreateLogDelivery'
                - 'logs:GetLogDelivery'
                - 'logs:UpdateLogDelivery'
                - 'logs:DeleteLogDelivery'
                - 'logs:ListLogDeliveries'
                - 'logs:PutResourcePolicy'
                - 'logs:DescribeResourcePolicies'
                - 'logs:DescribeLogGroups'
                - 'cloudwatch:PutMetricData'
              Resource: '*'
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt ApprovalStateMachineLogGroup.Arn
        Level: ALL
        IncludeExecutionData: true
  ApprovalStateMachineLogGroup:
    Type: 'AWS::Logs::LogGroup'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub '/aws/states/${AWS::StackName}-ApprovalStateMachine'
      RetentionInDays: !FindInMap
        - LogsRetentionPeriodMap
        - !Ref Stage
        - Days
  PropertiesEventBusRuleDLQ:
    Type: 'AWS::SQS::Queue'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      SqsManagedSseEnabled: true
      MessageRetentionPeriod: 1209600
      Tags:
        - Key: project
          Value: !FindInMap
            - Constants
            - ProjectName
            - Value
        - Key: namespace
          Value: '{{resolve:ssm:/uni-prop/UnicornPropertiesNamespace}}'
        - Key: stage
          Value: !Ref Stage
  PropertiesServiceDLQ:
    Type: 'AWS::SQS::Queue'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      SqsManagedSseEnabled: true
      MessageRetentionPeriod: 1209600
      Tags:
        - Key: project
          Value: !FindInMap
            - Constants
            - ProjectName
            - Value
        - Key: namespace
          Value: '{{resolve:ssm:/uni-prop/UnicornPropertiesNamespace}}'
        - Key: stage
          Value: !Ref Stage
  ContractStatusTable:
    Type: 'AWS::DynamoDB::Table'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: property_id
          AttributeType: S
      KeySchema:
        - AttributeName: property_id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: project
          Value: !FindInMap
            - Constants
            - ProjectName
            - Value
        - Key: namespace
          Value: '{{resolve:ssm:/uni-prop/UnicornPropertiesNamespace}}'
        - Key: stage
          Value: !Ref Stage
  UnicornPropertiesEventBus:
    Type: 'AWS::Events::EventBus'
    Properties:
      Name: !Sub 'UnicornPropertiesBus-${Stage}'
  UnicornPropertiesEventsBusPublishPolicy:
    Type: 'AWS::Events::EventBusPolicy'
    Properties:
      EventBusName: !Ref UnicornPropertiesEventBus
      StatementId: !Sub 'OnlyPropertiesServiceCanPublishToEventBus-${Stage}'
      Statement:
        Effect: Allow
        Principal:
          AWS:
            - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:root'
        Action: 'events:PutEvents'
        Resource: !GetAtt UnicornPropertiesEventBus.Arn
        Condition:
          StringEquals:
            'events:source':
              - '{{resolve:ssm:/uni-prop/UnicornPropertiesNamespace}}'
  UnicornPropertiesCatchAllRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Name: properties.catchall
      Description: Catchall rule used for development purposes.
      EventBusName: !Ref UnicornPropertiesEventBus
      EventPattern:
        account:
          - !Ref 'AWS::AccountId'
        source:
          - '{{resolve:ssm:/uni-prop/UnicornContractsNamespace}}'
          - '{{resolve:ssm:/uni-prop/UnicornPropertiesNamespace}}'
          - '{{resolve:ssm:/uni-prop/UnicornWebNamespace}}'
      State: ENABLED
      Targets:
        - Arn: !GetAtt UnicornPropertiesCatchAllLogGroup.Arn
          Id: !Sub 'UnicornPropertiesCatchAllLogGroupTarget-${Stage}'
  UnicornPropertiesCatchAllLogGroup:
    Type: 'AWS::Logs::LogGroup'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub
        - '/aws/events/${Stage}/${NS}-catchall'
        - Stage: !Ref Stage
          NS: '{{resolve:ssm:/uni-prop/UnicornPropertiesNamespace}}'
      RetentionInDays: !FindInMap
        - LogsRetentionPeriodMap
        - !Ref Stage
        - Days
  EventBridgeCloudWatchLogGroupPolicy:
    Type: 'AWS::Logs::ResourcePolicy'
    Properties:
      PolicyName: !Sub 'EvBToCWLogs-${AWS::StackName}'
      PolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "delivery.logs.amazonaws.com",
                  "events.amazonaws.com"
                ]
              },
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": [
                "${UnicornPropertiesCatchAllLogGroup.Arn}"
              ]
            }
          ]
        }
  EventSchemasStack:
    Type: 'AWS::Serverless::Application'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Location: integration/event-schemas.yaml
      Parameters:
        Stage: !Ref Stage
  SubscriberPoliciesStack:
    Type: 'AWS::Serverless::Application'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    DependsOn:
      - UnicornPropertiesEventBusNameParam
    Properties:
      Location: integration/subscriber-policies.yaml
      Parameters:
        Stage: !Ref Stage
  SubscriptionsStack:
    Type: 'AWS::Serverless::Application'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    DependsOn:
      - UnicornPropertiesEventBusArnParam
    Properties:
      Location: integration/subscriptions.yaml
      Parameters:
        Stage: !Ref Stage
Outputs:
  ContractStatusTableName:
    Description: DynamoDB table storing contract status information
    Value: !Ref ContractStatusTable
  ContractStatusChangedHandlerFunctionName:
    Value: !Ref ContractStatusChangedHandlerFunction
  ContractStatusChangedHandlerFunctionArn:
    Value: !GetAtt ContractStatusChangedHandlerFunction.Arn
  PropertiesApprovalSyncFunctionName:
    Value: !Ref PropertiesApprovalSyncFunction
  PropertiesApprovalSyncFunctionArn:
    Value: !GetAtt PropertiesApprovalSyncFunction.Arn
  ContractExistsCheckerFunctionName:
    Value: !Ref ContractExistsCheckerFunction
  ContractExistsCheckerFunctionArn:
    Value: !GetAtt ContractExistsCheckerFunction.Arn
  ContentIntegrityValidatorFunctionName:
    Value: !Ref ContentIntegrityValidatorFunction
  ContentIntegrityValidatorFunctionArn:
    Value: !GetAtt ContentIntegrityValidatorFunction.Arn
  WaitForContractApprovalFunctionName:
    Value: !Ref WaitForContractApprovalFunction
  WaitForContractApprovalFunctionArn:
    Value: !GetAtt WaitForContractApprovalFunction.Arn
  ApprovalStateMachineName:
    Value: !GetAtt ApprovalStateMachine.Name
  ApprovalStateMachineArn:
    Value: !Ref ApprovalStateMachine
  UnicornPropertiesEventBusName:
    Value: !GetAtt UnicornPropertiesEventBus.Name
  UnicornPropertiesCatchAllLogGroupArn:
    Description: Log all events on the service's EventBridge Bus
    Value: !GetAtt UnicornPropertiesCatchAllLogGroup.Arn
  ApprovalStateMachineLogGroupName:
    Value: !Ref ApprovalStateMachineLogGroup
